var pages = [{'name': 'object MenuItemDiffCallback : DiffUtil.ItemCallback<MenuItem> ', 'description':'danbroid.habitrack.ui.menulist.MenuItemDiffCallback', 'location':'menu/danbroid.habitrack.ui.menulist/-menu-item-diff-callback/index.html', 'searchKey':'MenuItemDiffCallback'},
{'name': 'open override fun areContentsTheSame(oldItem: MenuItem, newItem: MenuItem): Boolean', 'description':'danbroid.habitrack.ui.menulist.MenuItemDiffCallback.areContentsTheSame', 'location':'menu/danbroid.habitrack.ui.menulist/-menu-item-diff-callback/are-contents-the-same.html', 'searchKey':'areContentsTheSame'},
{'name': 'open override fun areItemsTheSame(oldItem: MenuItem, newItem: MenuItem): Boolean', 'description':'danbroid.habitrack.ui.menulist.MenuItemDiffCallback.areItemsTheSame', 'location':'menu/danbroid.habitrack.ui.menulist/-menu-item-diff-callback/are-items-the-same.html', 'searchKey':'areItemsTheSame'},
{'name': 'class MenuListAdapter(diffCallback: DiffUtil.ItemCallback<MenuItem>) : ListAdapter<MenuItem, MenuListAdapter.MenuViewHolder> ', 'description':'danbroid.habitrack.ui.menulist.MenuListAdapter', 'location':'menu/danbroid.habitrack.ui.menulist/-menu-list-adapter/index.html', 'searchKey':'MenuListAdapter'},
{'name': 'fun MenuListAdapter(diffCallback: DiffUtil.ItemCallback<MenuItem>)', 'description':'danbroid.habitrack.ui.menulist.MenuListAdapter.MenuListAdapter', 'location':'menu/danbroid.habitrack.ui.menulist/-menu-list-adapter/-menu-list-adapter.html', 'searchKey':'MenuListAdapter'},
{'name': 'inner class MenuViewHolder(itemView: ViewGroup) : RecyclerView.ViewHolder', 'description':'danbroid.habitrack.ui.menulist.MenuListAdapter.MenuViewHolder', 'location':'menu/danbroid.habitrack.ui.menulist/-menu-list-adapter/-menu-view-holder/index.html', 'searchKey':'MenuViewHolder'},
{'name': 'fun MenuViewHolder(itemView: ViewGroup)', 'description':'danbroid.habitrack.ui.menulist.MenuListAdapter.MenuViewHolder.MenuViewHolder', 'location':'menu/danbroid.habitrack.ui.menulist/-menu-list-adapter/-menu-view-holder/-menu-view-holder.html', 'searchKey':'MenuViewHolder'},
{'name': 'fun bind(menu: MenuItem, payloads: MutableList<Any>)', 'description':'danbroid.habitrack.ui.menulist.MenuListAdapter.MenuViewHolder.bind', 'location':'menu/danbroid.habitrack.ui.menulist/-menu-list-adapter/-menu-view-holder/bind.html', 'searchKey':'bind'},
{'name': 'fun recycle()', 'description':'danbroid.habitrack.ui.menulist.MenuListAdapter.MenuViewHolder.recycle', 'location':'menu/danbroid.habitrack.ui.menulist/-menu-list-adapter/-menu-view-holder/recycle.html', 'searchKey':'recycle'},
{'name': 'open override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MenuListAdapter.MenuViewHolder', 'description':'danbroid.habitrack.ui.menulist.MenuListAdapter.onCreateViewHolder', 'location':'menu/danbroid.habitrack.ui.menulist/-menu-list-adapter/on-create-view-holder.html', 'searchKey':'onCreateViewHolder'},
{'name': 'open override fun onViewRecycled(holder: MenuListAdapter.MenuViewHolder)', 'description':'danbroid.habitrack.ui.menulist.MenuListAdapter.onViewRecycled', 'location':'menu/danbroid.habitrack.ui.menulist/-menu-list-adapter/on-view-recycled.html', 'searchKey':'onViewRecycled'},
{'name': 'class ContentManager(context: Context) : Singleton<Context> ', 'description':'danbroid.util.menu.ContentManager', 'location':'menu/danbroid.util.menu/-content-manager/index.html', 'searchKey':'ContentManager'},
{'name': 'fun ContentManager(context: Context)', 'description':'danbroid.util.menu.ContentManager.ContentManager', 'location':'menu/danbroid.util.menu/-content-manager/-content-manager.html', 'searchKey':'ContentManager'},
{'name': 'suspend fun liveChildren(item: MenuItem?, builder: MenuItemBuilder): List<MenuItem>?', 'description':'danbroid.util.menu.ContentManager.liveChildren', 'location':'menu/danbroid.util.menu/-content-manager/live-children.html', 'searchKey':'liveChildren'},
{'name': 'fun liveItemFlow(id: String, builder: MenuItemBuilder): Flow<MenuItem>', 'description':'danbroid.util.menu.ContentManager.liveItemFlow', 'location':'menu/danbroid.util.menu/-content-manager/live-item-flow.html', 'searchKey':'liveItemFlow'},
{'name': 'class MenuActionContext(context: Context, menuItem: MenuItem, fragment: Fragment?)', 'description':'danbroid.util.menu.MenuActionContext', 'location':'menu/danbroid.util.menu/-menu-action-context/index.html', 'searchKey':'MenuActionContext'},
{'name': 'fun MenuActionContext(context: Context, menuItem: MenuItem, fragment: Fragment?)', 'description':'danbroid.util.menu.MenuActionContext.MenuActionContext', 'location':'menu/danbroid.util.menu/-menu-action-context/-menu-action-context.html', 'searchKey':'MenuActionContext'},
{'name': 'open class MenuBuilder', 'description':'danbroid.util.menu.MenuBuilder', 'location':'menu/danbroid.util.menu/-menu-builder/index.html', 'searchKey':'MenuBuilder'},
{'name': 'fun MenuBuilder()', 'description':'danbroid.util.menu.MenuBuilder.MenuBuilder', 'location':'menu/danbroid.util.menu/-menu-builder/-menu-builder.html', 'searchKey':'MenuBuilder'},
{'name': 'open fun addChild(child: MenuBuilder)', 'description':'danbroid.util.menu.MenuBuilder.addChild', 'location':'menu/danbroid.util.menu/-menu-builder/add-child.html', 'searchKey':'addChild'},
{'name': 'fun depthFirst(): Sequence<MenuBuilder>', 'description':'danbroid.util.menu.MenuBuilder.depthFirst', 'location':'menu/danbroid.util.menu/-menu-builder/depth-first.html', 'searchKey':'depthFirst'},
{'name': 'annotation class MenuDSL', 'description':'danbroid.util.menu.MenuDSL', 'location':'menu/danbroid.util.menu/-menu-d-s-l/index.html', 'searchKey':'MenuDSL'},
{'name': 'fun MenuDSL()', 'description':'danbroid.util.menu.MenuDSL.MenuDSL', 'location':'menu/danbroid.util.menu/-menu-d-s-l/-menu-d-s-l.html', 'searchKey':'MenuDSL'},
{'name': 'data class MenuItem(id: String, title: String, subtitle: String, imageURI: String?, menuID: Int, contextMenuID: Int, isBrowsable: Boolean, isVisible: Boolean, inlineChildren: Boolean, menuItemBuilder: MenuItemBuilder?)', 'description':'danbroid.util.menu.MenuItem', 'location':'menu/danbroid.util.menu/-menu-item/index.html', 'searchKey':'MenuItem'},
{'name': 'fun MenuItem(id: String, title: String, subtitle: String, imageURI: String?, menuID: Int, contextMenuID: Int, isBrowsable: Boolean, isVisible: Boolean, inlineChildren: Boolean, menuItemBuilder: MenuItemBuilder?)', 'description':'danbroid.util.menu.MenuItem.MenuItem', 'location':'menu/danbroid.util.menu/-menu-item/-menu-item.html', 'searchKey':'MenuItem'},
{'name': 'operator fun component1(): String', 'description':'danbroid.util.menu.MenuItem.component1', 'location':'menu/danbroid.util.menu/-menu-item/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component10(): MenuItemBuilder?', 'description':'danbroid.util.menu.MenuItem.component10', 'location':'menu/danbroid.util.menu/-menu-item/component10.html', 'searchKey':'component10'},
{'name': 'operator fun component2(): String', 'description':'danbroid.util.menu.MenuItem.component2', 'location':'menu/danbroid.util.menu/-menu-item/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component3(): String', 'description':'danbroid.util.menu.MenuItem.component3', 'location':'menu/danbroid.util.menu/-menu-item/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component4(): String?', 'description':'danbroid.util.menu.MenuItem.component4', 'location':'menu/danbroid.util.menu/-menu-item/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component5(): Int', 'description':'danbroid.util.menu.MenuItem.component5', 'location':'menu/danbroid.util.menu/-menu-item/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component6(): Int', 'description':'danbroid.util.menu.MenuItem.component6', 'location':'menu/danbroid.util.menu/-menu-item/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component7(): Boolean', 'description':'danbroid.util.menu.MenuItem.component7', 'location':'menu/danbroid.util.menu/-menu-item/component7.html', 'searchKey':'component7'},
{'name': 'operator fun component8(): Boolean', 'description':'danbroid.util.menu.MenuItem.component8', 'location':'menu/danbroid.util.menu/-menu-item/component8.html', 'searchKey':'component8'},
{'name': 'operator fun component9(): Boolean', 'description':'danbroid.util.menu.MenuItem.component9', 'location':'menu/danbroid.util.menu/-menu-item/component9.html', 'searchKey':'component9'},
{'name': 'fun copy(id: String, title: String, subtitle: String, imageURI: String?, menuID: Int, contextMenuID: Int, isBrowsable: Boolean, isVisible: Boolean, inlineChildren: Boolean, menuItemBuilder: MenuItemBuilder?): MenuItem', 'description':'danbroid.util.menu.MenuItem.copy', 'location':'menu/danbroid.util.menu/-menu-item/copy.html', 'searchKey':'copy'},
{'name': 'class MenuItemBuilder : MenuBuilder', 'description':'danbroid.util.menu.MenuItemBuilder', 'location':'menu/danbroid.util.menu/-menu-item-builder/index.html', 'searchKey':'MenuItemBuilder'},
{'name': 'fun MenuItemBuilder()', 'description':'danbroid.util.menu.MenuItemBuilder.MenuItemBuilder', 'location':'menu/danbroid.util.menu/-menu-item-builder/-menu-item-builder.html', 'searchKey':'MenuItemBuilder'},
{'name': 'fun createItem(context: Context, itemID: String): MenuItem', 'description':'danbroid.util.menu.MenuItemBuilder.createItem', 'location':'menu/danbroid.util.menu/-menu-item-builder/create-item.html', 'searchKey':'createItem'},
{'name': 'inline fun <T : MenuBuilder> T.find(id: String): T?', 'description':'danbroid.util.menu.find', 'location':'menu/danbroid.util.menu/find.html', 'searchKey':'find'},
{'name': 'inline fun <T : MenuBuilder> T.menu(child: T, block: T.() -> Unit)', 'description':'danbroid.util.menu.menu', 'location':'menu/danbroid.util.menu/menu.html', 'searchKey':'menu'},
{'name': 'inline fun <T : MenuBuilder> rootMenu(builder: T, block: T.() -> Unit): T', 'description':'danbroid.util.menu.rootMenu', 'location':'menu/danbroid.util.menu/root-menu.html', 'searchKey':'rootMenu'},
{'name': 'object MenuImplementation', 'description':'danbroid.util.menu.ui.MenuImplementation', 'location':'menu/danbroid.util.menu.ui/-menu-implementation/index.html', 'searchKey':'MenuImplementation'},
{'name': 'open class MenuListFragment : Fragment', 'description':'danbroid.util.menu.ui.menulist.MenuListFragment', 'location':'menu/danbroid.util.menu.ui.menulist/-menu-list-fragment/index.html', 'searchKey':'MenuListFragment'},
{'name': 'fun MenuListFragment()', 'description':'danbroid.util.menu.ui.menulist.MenuListFragment.MenuListFragment', 'location':'menu/danbroid.util.menu.ui.menulist/-menu-list-fragment/-menu-list-fragment.html', 'searchKey':'MenuListFragment'},
{'name': 'open override fun onContextItemSelected(item: MenuItem): Boolean', 'description':'danbroid.util.menu.ui.menulist.MenuListFragment.onContextItemSelected', 'location':'menu/danbroid.util.menu.ui.menulist/-menu-list-fragment/on-context-item-selected.html', 'searchKey':'onContextItemSelected'},
{'name': 'open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View', 'description':'danbroid.util.menu.ui.menulist.MenuListFragment.onCreateView', 'location':'menu/danbroid.util.menu.ui.menulist/-menu-list-fragment/on-create-view.html', 'searchKey':'onCreateView'},
{'name': 'open fun onMenuChanged(menu: MenuItem, adapter: MenuListAdapter)', 'description':'danbroid.util.menu.ui.menulist.MenuListFragment.onMenuChanged', 'location':'menu/danbroid.util.menu.ui.menulist/-menu-list-fragment/on-menu-changed.html', 'searchKey':'onMenuChanged'},
{'name': 'open override fun onViewCreated(view: View, savedInstanceState: Bundle?)', 'description':'danbroid.util.menu.ui.menulist.MenuListFragment.onViewCreated', 'location':'menu/danbroid.util.menu.ui.menulist/-menu-list-fragment/on-view-created.html', 'searchKey':'onViewCreated'},
{'name': 'open class MenuListModel(context: Context, id: String, builder: MenuItemBuilder) : ViewModel', 'description':'danbroid.util.menu.ui.model.MenuListModel', 'location':'menu/danbroid.util.menu.ui.model/-menu-list-model/index.html', 'searchKey':'MenuListModel'},
{'name': 'fun MenuListModel(context: Context, id: String, builder: MenuItemBuilder)', 'description':'danbroid.util.menu.ui.model.MenuListModel.MenuListModel', 'location':'menu/danbroid.util.menu.ui.model/-menu-list-model/-menu-list-model.html', 'searchKey':'MenuListModel'},
{'name': 'object Companion', 'description':'danbroid.util.menu.ui.model.MenuListModel.Companion', 'location':'menu/danbroid.util.menu.ui.model/-menu-list-model/-companion/index.html', 'searchKey':'Companion'},
{'name': 'class NewInstanceFactory(context: Context, id: String, builder: MenuItemBuilder) : ViewModelProvider.NewInstanceFactory', 'description':'danbroid.util.menu.ui.model.MenuListModel.Companion.NewInstanceFactory', 'location':'menu/danbroid.util.menu.ui.model/-menu-list-model/-companion/-new-instance-factory/index.html', 'searchKey':'NewInstanceFactory'},
{'name': 'fun NewInstanceFactory(context: Context, id: String, builder: MenuItemBuilder)', 'description':'danbroid.util.menu.ui.model.MenuListModel.Companion.NewInstanceFactory.NewInstanceFactory', 'location':'menu/danbroid.util.menu.ui.model/-menu-list-model/-companion/-new-instance-factory/-new-instance-factory.html', 'searchKey':'NewInstanceFactory'},
{'name': 'open override fun <T : ViewModel?> create(modelClass: Class<T>): T', 'description':'danbroid.util.menu.ui.model.MenuListModel.Companion.NewInstanceFactory.create', 'location':'menu/danbroid.util.menu.ui.model/-menu-list-model/-companion/-new-instance-factory/create.html', 'searchKey':'create'},
{'name': 'fun Fragment.menuListModel(id: String, builder: MenuItemBuilder): MenuListModel', 'description':'danbroid.util.menu.ui.model.menuListModel', 'location':'menu/danbroid.util.menu.ui.model/menu-list-model.html', 'searchKey':'menuListModel'}]
